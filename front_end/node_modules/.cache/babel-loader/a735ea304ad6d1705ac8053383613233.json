{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\Blockchain\\\\smartcontract-lottery-main\\\\front_end\\\\src\\\\components\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Box } from \"@material-ui/core\";\nimport Lottery from \"../chian-info/contracts/Lottery.json\";\nimport networkMapping from \"../chian-info/deployments/map.json\";\nimport { constants, utils } from \"ethers\";\nimport { useContractFunction, useEthers } from \"@usedapp/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport React from 'react';\nimport { useLottery } from \"../hooks/useLottery\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tabContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: theme.spacing(4)\n  },\n  box: {\n    margin: \"50px\",\n    backgroundColor: \"#EDE9E8\",\n    borderRadius: \"25px\",\n    height: \"200px\",\n    position: \"relative\"\n  },\n  header: {\n    color: \"black\"\n  },\n  button: {\n    margin: \"0\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%)\",\n    backgroundColor: \"#21b6ae\",\n    '&:hover': {\n      background: \"#f00\"\n    }\n  }\n}));\nexport const Main = () => {\n  _s();\n\n  const {\n    abi\n  } = Lottery;\n  const {\n    chainId\n  } = useEthers();\n  const LotteryAddress = chainId ? networkMapping[\"42\"][\"Lottery\"][0] : constants.AddressZero;\n  const {\n    account\n  } = useEthers();\n  const LotteryInterface = new utils.Interface(abi);\n  const LotteryContract = new Contract(LotteryAddress, LotteryInterface); //const  [amount , setAmount ] = useState<number | string | Array<number | string >>(0)\n  //const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //    const newAmount = event.target.value === \"\" ? \"\" : Number(event.target.value)\n  //    setAmount(newAmount)\n  // }\n\n  const {\n    send\n  } = useContractFunction(LotteryContract, \"enter\", {});\n  const amount = 0.0250;\n  const amountAsWei = utils.parseEther(amount.toString());\n  const count = useLottery();\n  console.log(count.toNumber());\n\n  const handleAmountSubmit = () => {\n    send({\n      value: amountAsWei\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.header,\n      children: \" Enter in Lottery! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAmountSubmit,\n        color: \"primary\",\n        variant: \"contained\",\n        size: \"large\",\n        className: classes.button //disabled={isMining}\n        ,\n        children: \"Pay 50$ worth ether to enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"aqGtV+qzgJEvLGFVm9Iyq+eXZP8=\", false, function () {\n  return [useEthers, useEthers, useContractFunction, useLottery, useStyles];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/programing/Blockchain/smartcontract-lottery-main/front_end/src/components/Main.tsx"],"names":["Button","Box","Lottery","networkMapping","constants","utils","useContractFunction","useEthers","Contract","React","useLottery","makeStyles","useStyles","theme","tabContent","display","flexDirection","alignItems","gap","spacing","box","margin","backgroundColor","borderRadius","height","position","header","color","button","top","left","transform","background","Main","abi","chainId","LotteryAddress","AddressZero","account","LotteryInterface","Interface","LotteryContract","send","amount","amountAsWei","parseEther","toString","count","console","log","toNumber","handleAmountSubmit","value","classes"],"mappings":"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","sourcesContent":["import { Button, Tab ,Box , Input , CircularProgress } from \"@material-ui/core\"\r\nimport Lottery from \"../chian-info/contracts/Lottery.json\"\r\nimport networkMapping from \"../chian-info/deployments/map.json\";\r\nimport { constants , utils } from \"ethers\";\r\nimport { useContractFunction, useEthers , useContractCall } from \"@usedapp/core\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\nimport React , { useEffect, useState } from 'react'\r\nimport { useLottery } from \"../hooks/useLottery\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tabContent: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        gap: theme.spacing(4)\r\n    },\r\n    box: {\r\n        margin: \"50px\",\r\n        backgroundColor: \"#EDE9E8\",\r\n        borderRadius: \"25px\",\r\n        height: \"200px\",\r\n        position: \"relative\"\r\n    },\r\n    header: {\r\n        color: \"black\"\r\n    },\r\n    button: {\r\n        margin: \"0\",\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%)\",\r\n        backgroundColor: \"#21b6ae\",\r\n        '&:hover': {\r\n            background: \"#f00\",\r\n         },\r\n    }\r\n}))\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    const { abi } = Lottery\r\n    const {chainId} = useEthers()\r\n    const LotteryAddress = chainId ? networkMapping[\"42\"][\"Lottery\"][0] : constants.AddressZero\r\n    const { account } = useEthers()\r\n    const LotteryInterface = new utils.Interface(abi)\r\n    const LotteryContract = new Contract(LotteryAddress, LotteryInterface)\r\n\r\n    //const  [amount , setAmount ] = useState<number | string | Array<number | string >>(0)\r\n    //const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //    const newAmount = event.target.value === \"\" ? \"\" : Number(event.target.value)\r\n    //    setAmount(newAmount)\r\n   // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n   const { send } = useContractFunction(LotteryContract, \"enter\" , {})\r\n\r\n    const amount = 0.0250\r\n   const amountAsWei = utils.parseEther(amount.toString())\r\n    \r\n   const count = useLottery()\r\n\r\n   console.log(count.toNumber())\r\n\r\n    const handleAmountSubmit = () => {\r\n        send({ value: amountAsWei })\r\n    }\r\n\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <Box>\r\n            <h1 className={classes.header}> Enter in Lottery! </h1>\r\n            <Box className={classes.box}>\r\n           \r\n            <Button\r\n                onClick={handleAmountSubmit}\r\n                color = \"primary\"\r\n                variant=\"contained\" \r\n                size=\"large\"\r\n                className={classes.button}\r\n                //disabled={isMining}\r\n            >\r\n               Pay 50$ worth ether to enter\r\n            </Button>\r\n         \r\n            </Box>\r\n        </Box> \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}