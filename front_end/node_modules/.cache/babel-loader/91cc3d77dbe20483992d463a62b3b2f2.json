{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\Blockchain\\\\smartcontract-lottery-main\\\\front_end\\\\src\\\\components\\\\Main.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { Button, Input } from \"@material-ui/core\";\nimport Lottery from \"../chian-info/contracts/Lottery.json\";\nimport networkMapping from \"../chian-info/deployments/map.json\";\nimport { constants, utils } from \"ethers\";\nimport { useEthers } from \"@usedapp/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    abi\n  } = Lottery;\n  const {\n    chainId\n  } = useEthers();\n  const LotteryAddress = chainId ? networkMapping[\"4\"][\"Lottery\"][0] : constants.AddressZero;\n  const {\n    account\n  } = useEthers();\n\n  const handleAmountSubmit = () => {\n    _s();\n\n    const amountAsWei = utils.parseEther(amount.toString());\n    return approveAndStake(amountAsWei.toString());\n    const tokenBalance = useTokenBalance(tokenAddress, account);\n  };\n\n  _s(handleAmountSubmit, \"es025Q5SvWfT9a7CJHxv4JscCk0=\", true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\" //onChange={handleInputChange} \n      ,\n      inputProps: {\n        min: 4,\n        max: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\xA0\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Button //onClick={handleStakeSubmit}\n    , {\n      color: \"primary\",\n      variant: \"contained\",\n      size: \"large\" //disabled={isMining}\n      ,\n      children: \"Enter Lottery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Main, \"pjhF5Nl+puCnqpiubNCPXC8tfE0=\", false, function () {\n  return [useEthers, useEthers];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/programing/Blockchain/smartcontract-lottery-main/front_end/src/components/Main.tsx"],"names":["Button","Input","Lottery","networkMapping","constants","utils","useEthers","Main","abi","chainId","LotteryAddress","AddressZero","account","handleAmountSubmit","amountAsWei","parseEther","amount","toString","approveAndStake","tokenBalance","useTokenBalance","tokenAddress","min","max"],"mappings":";;;AAAA,SAASA,MAAT,EAAkBC,KAAlB,QAAkD,mBAAlD;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAqBC,KAArB,QAAkC,QAAlC;AACA,SAA8BC,SAA9B,QAA+C,eAA/C;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAAA;;AAEtB,QAAM;AAAEC,IAAAA;AAAF,MAAUN,OAAhB;AACA,QAAM;AAACO,IAAAA;AAAD,MAAYH,SAAS,EAA3B;AACA,QAAMI,cAAc,GAAGD,OAAO,GAAGN,cAAc,CAAC,GAAD,CAAd,CAAoB,SAApB,EAA+B,CAA/B,CAAH,GAAuCC,SAAS,CAACO,WAA/E;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA7B;;AAEA,QAAMO,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,UAAMC,WAAW,GAAGT,KAAK,CAACU,UAAN,CAAiBC,MAAM,CAACC,QAAP,EAAjB,CAApB;AACA,WAAOC,eAAe,CAACJ,WAAW,CAACG,QAAZ,EAAD,CAAtB;AAIJ,UAAME,YAAY,GAAGC,eAAe,CAACC,YAAD,EAAeT,OAAf,CAApC;AACC,GAPD;;AAPsB,KAOhBC,kBAPgB;;AAkBtB,sBACI;AAAA,4BACI,QAAC,KAAD;AACA,MAAA,IAAI,EAAC,QADL,CAEA;AAFA;AAGA,MAAA,UAAU,EAAE;AAAES,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE;AAAf;AAHZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANL,eAOI,QAAC,MAAD,CACI;AADJ;AAEI,MAAA,KAAK,EAAG,SAFZ;AAGI,MAAA,OAAO,EAAC,WAHZ;AAII,MAAA,IAAI,EAAC,OAJT,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAmBH,CArCM;;IAAMhB,I;UAGSD,S,EAEEA,S;;;KALXC,I","sourcesContent":["import { Button , Input , CircularProgress } from \"@material-ui/core\"\r\nimport Lottery from \"../chian-info/contracts/Lottery.json\"\r\nimport networkMapping from \"../chian-info/deployments/map.json\";\r\nimport { constants , utils } from \"ethers\";\r\nimport { useContractFunction, useEthers } from \"@usedapp/core\"\r\n\r\nexport const Main = () => {\r\n\r\n    const { abi } = Lottery\r\n    const {chainId} = useEthers()\r\n    const LotteryAddress = chainId ? networkMapping[\"4\"][\"Lottery\"][0] : constants.AddressZero\r\n    const { account } = useEthers()\r\n\r\n    const handleAmountSubmit = () => {\r\n        const amountAsWei = utils.parseEther(amount.toString())\r\n        return approveAndStake(amountAsWei.toString())\r\n\r\n\r\n\r\n    const tokenBalance = useTokenBalance(tokenAddress, account)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Input\r\n            type=\"number\"\r\n            //onChange={handleInputChange} \r\n            inputProps={{ min: 4, max: 10 }}\r\n             />\r\n             <span>&nbsp;&nbsp;</span>\r\n            <Button\r\n                //onClick={handleStakeSubmit}\r\n                color = \"primary\"\r\n                variant=\"contained\" \r\n                size=\"large\"\r\n                //disabled={isMining}\r\n            >\r\n               Enter Lottery\r\n            </Button>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}