{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\Blockchain\\\\smartcontract-lottery-main\\\\front_end\\\\src\\\\components\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Input } from \"@material-ui/core\";\nimport Lottery from \"../chian-info/contracts/Lottery.json\";\nimport networkMapping from \"../chian-info/deployments/map.json\";\nimport { constants, utils } from \"ethers\";\nimport { useEthers } from \"@usedapp/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const {\n    abi\n  } = Lottery;\n  const {\n    chainId\n  } = useEthers();\n  const LotteryAddress = chainId ? networkMapping[\"42\"][\"Lottery\"][0] : constants.AddressZero;\n  const {\n    account\n  } = useEthers();\n  const LotteryInterface = new utils.Interface(abi);\n  const LotteryContract = new Contract(LotteryAddress, LotteryInterface);\n  const [amount, setAmount] = useState(0);\n\n  const handleInputChange = event => {\n    const newAmount = event.target.value === \"\" ? \"\" : Number(event.target.value);\n    setAmount(newAmount);\n  };\n\n  const handleAmountSubmit = () => {\n    const amountAsWei = utils.parseEther(amount.toString()); //return approveAndStake(amountAsWei.toString())\n\n    console.log(\"hello\");\n    hello;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      onChange: handleInputChange,\n      inputProps: {\n        min: 0,\n        max: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\xA0\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAmountSubmit,\n      color: \"primary\",\n      variant: \"contained\",\n      size: \"large\" //disabled={isMining}\n      ,\n      children: \"Enter Lottery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"p6Wws6bONoQxNyA5PbabFwXUb8U=\", false, function () {\n  return [useEthers, useEthers];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/programing/Blockchain/smartcontract-lottery-main/front_end/src/components/Main.tsx"],"names":["Button","Input","Lottery","networkMapping","constants","utils","useEthers","Contract","React","useState","Main","abi","chainId","LotteryAddress","AddressZero","account","LotteryInterface","Interface","LotteryContract","amount","setAmount","handleInputChange","event","newAmount","target","value","Number","handleAmountSubmit","amountAsWei","parseEther","toString","console","log","hello","min","max"],"mappings":";;;AAAA,SAASA,MAAT,EAAkBC,KAAlB,QAAkD,mBAAlD;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAqBC,KAArB,QAAkC,QAAlC;AACA,SAA8BC,SAA9B,QAA+C,eAA/C;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,KAAP,IAA4BC,QAA5B,QAA4C,OAA5C;;;AAKA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEtB,QAAM;AAAEC,IAAAA;AAAF,MAAUT,OAAhB;AACA,QAAM;AAACU,IAAAA;AAAD,MAAYN,SAAS,EAA3B;AACA,QAAMO,cAAc,GAAGD,OAAO,GAAGT,cAAc,CAAC,IAAD,CAAd,CAAqB,SAArB,EAAgC,CAAhC,CAAH,GAAwCC,SAAS,CAACU,WAAhF;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcT,SAAS,EAA7B;AACA,QAAMU,gBAAgB,GAAG,IAAIX,KAAK,CAACY,SAAV,CAAoBN,GAApB,CAAzB;AACA,QAAMO,eAAe,GAAG,IAAIX,QAAJ,CAAaM,cAAb,EAA6BG,gBAA7B,CAAxB;AAEA,QAAO,CAACG,MAAD,EAAUC,SAAV,IAAwBX,QAAQ,CAA4C,CAA5C,CAAvC;;AACA,QAAMY,iBAAiB,GAAIC,KAAD,IAAgD;AACtE,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAAvB,GAA4B,EAA5B,GAAiCC,MAAM,CAACJ,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAzD;AACAL,IAAAA,SAAS,CAACG,SAAD,CAAT;AACH,GAHD;;AAOA,QAAMI,kBAAkB,GAAG,MAAM;AAC7B,UAAMC,WAAW,GAAGvB,KAAK,CAACwB,UAAN,CAAiBV,MAAM,CAACW,QAAP,EAAjB,CAApB,CAD6B,CAE7B;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,IAAAA,KAAK;AACR,GALD;;AASA,sBACI;AAAA,4BACI,QAAC,KAAD;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,QAAQ,EAAEZ,iBAFV;AAGA,MAAA,UAAU,EAAE;AAAEa,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE;AAAf;AAHZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANL,eAOI,QAAC,MAAD;AACI,MAAA,OAAO,EAAER,kBADb;AAEI,MAAA,KAAK,EAAG,SAFZ;AAGI,MAAA,OAAO,EAAC,WAHZ;AAII,MAAA,IAAI,EAAC,OAJT,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAmBH,CA7CM;;GAAMjB,I;UAGSJ,S,EAEEA,S;;;KALXI,I","sourcesContent":["import { Button , Input , CircularProgress } from \"@material-ui/core\"\r\nimport Lottery from \"../chian-info/contracts/Lottery.json\"\r\nimport networkMapping from \"../chian-info/deployments/map.json\";\r\nimport { constants , utils } from \"ethers\";\r\nimport { useContractFunction, useEthers } from \"@usedapp/core\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\nimport React , { useEffect, useState } from 'react'\r\nimport { useLottery } from \"../hooks/useLottery\"\r\n\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    const { abi } = Lottery\r\n    const {chainId} = useEthers()\r\n    const LotteryAddress = chainId ? networkMapping[\"42\"][\"Lottery\"][0] : constants.AddressZero\r\n    const { account } = useEthers()\r\n    const LotteryInterface = new utils.Interface(abi)\r\n    const LotteryContract = new Contract(LotteryAddress, LotteryInterface)\r\n\r\n    const  [amount , setAmount ] = useState<number | string | Array<number | string >>(0)\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newAmount = event.target.value === \"\" ? \"\" : Number(event.target.value)\r\n        setAmount(newAmount)\r\n    }\r\n\r\n    \r\n\r\n    const handleAmountSubmit = () => {\r\n        const amountAsWei = utils.parseEther(amount.toString())\r\n        //return approveAndStake(amountAsWei.toString())\r\n        console.log(\"hello\")\r\n        hello\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Input\r\n            type=\"number\"\r\n            onChange={handleInputChange} \r\n            inputProps={{ min: 0, max: 10 }}\r\n             />\r\n             <span>&nbsp;&nbsp;</span>\r\n            <Button\r\n                onClick={handleAmountSubmit}\r\n                color = \"primary\"\r\n                variant=\"contained\" \r\n                size=\"large\"\r\n                //disabled={isMining}\r\n            >\r\n               Enter Lottery\r\n            </Button>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}