{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\Blockchain\\\\smartcontract-lottery-main\\\\front_end\\\\src\\\\components\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Box, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Lottery from \"../chian-info/contracts/Lottery.json\";\nimport networkMapping from \"../chian-info/deployments/map.json\";\nimport { constants, utils } from \"ethers\";\nimport { useContractFunction, useEthers } from \"@usedapp/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport React, { useEffect } from 'react';\nimport { useLottery } from \"../hooks/useLottery\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tabContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: theme.spacing(4)\n  },\n  box: {\n    backgroundImage: \"linear-gradient(to right, #4880EC, #019CAD)\",\n    borderRadius: \"25px\",\n    height: \"200px\",\n    padding: \"50px\"\n  },\n  header: {\n    color: \"black\"\n  },\n  button: {\n    margin: \"0\",\n    left: \"50%\",\n    transform: \"translate(-50%)\",\n    backgroundColor: \"#f05ddf\",\n    '&:hover': {\n      background: \"#f00\"\n    }\n  },\n  center: {\n    textAlign: \"center\",\n    top: \"5%\",\n    color: \"white\"\n  },\n  content: {\n    paddingTop: \"200px\"\n  }\n}));\nexport const Main = () => {\n  _s();\n\n  const {\n    abi\n  } = Lottery;\n  const {\n    chainId\n  } = useEthers();\n  const LotteryAddress = chainId ? networkMapping[\"42\"][\"Lottery\"][0] : constants.AddressZero;\n  const {\n    account\n  } = useEthers();\n  const LotteryInterface = new utils.Interface(abi);\n  const LotteryContract = new Contract(LotteryAddress, LotteryInterface); //const  [amount , setAmount ] = useState<number | string | Array<number | string >>(0)\n  //const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //    const newAmount = event.target.value === \"\" ? \"\" : Number(event.target.value)\n  //    setAmount(newAmount)\n  // }\n\n  const {\n    send,\n    state\n  } = useContractFunction(LotteryContract, \"enter\", {});\n  console.log(state.status);\n  const amount = 0.0250;\n  const amountAsWei = utils.parseEther(amount.toString());\n  const count = useLottery();\n\n  const handleAmountSubmit = () => {\n    send({\n      value: amountAsWei\n    });\n  };\n\n  const isConnected = account !== undefined;\n  console.log(state.status);\n  const isMining = state.status === \"Mining\" || state.status === \"PendingSignature\";\n  const classes = useStyles();\n  useEffect(() => {\n    if (state.status === \"Success\") {\n      console.log(\"sucess\");\n    }\n  }, [state.status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.box,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.center,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Join our Lottery \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 51\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 87\n          }, this), \"Get a change to Win 5000$ \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), isConnected ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAmountSubmit,\n          color: \"primary\",\n          variant: \"contained\",\n          size: \"large\",\n          className: classes.button,\n          disabled: isMining,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 36,\n              thickness: 7,\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this) : \"Pay 50$ worth ether to enter\", \"    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAmountSubmit,\n          color: \"primary\",\n          variant: \"contained\",\n          size: \"large\",\n          className: classes.button,\n          disabled: true,\n          children: \"Connect Your Wallet First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: isMining,\n      autoHideDuration: 5000,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"Tokens Staked!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"WBjTMPeD4TPLHscszAWuhiUFmyk=\", false, function () {\n  return [useEthers, useEthers, useContractFunction, useLottery, useStyles];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/programing/Blockchain/smartcontract-lottery-main/front_end/src/components/Main.tsx"],"names":["Button","Box","CircularProgress","Snackbar","Lottery","networkMapping","constants","utils","useContractFunction","useEthers","Contract","React","useEffect","useLottery","makeStyles","Alert","useStyles","theme","tabContent","display","flexDirection","alignItems","gap","spacing","box","backgroundImage","borderRadius","height","padding","header","color","button","margin","left","transform","backgroundColor","background","center","textAlign","top","content","paddingTop","Main","abi","chainId","LotteryAddress","AddressZero","account","LotteryInterface","Interface","LotteryContract","send","state","console","log","status","amount","amountAsWei","parseEther","toString","count","handleAmountSubmit","value","isConnected","undefined","isMining","classes"],"mappings":"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","sourcesContent":["import { Button, Tab ,Box , Input , CircularProgress , Snackbar  } from \"@material-ui/core\"\r\nimport Lottery from \"../chian-info/contracts/Lottery.json\"\r\nimport networkMapping from \"../chian-info/deployments/map.json\";\r\nimport { constants , utils } from \"ethers\";\r\nimport { useContractFunction, useEthers , useContractCall } from \"@usedapp/core\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\nimport React , { useEffect, useState } from 'react'\r\nimport { useLottery } from \"../hooks/useLottery\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tabContent: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        gap: theme.spacing(4)\r\n    },\r\n    box: {\r\n        backgroundImage: \"linear-gradient(to right, #4880EC, #019CAD)\",\r\n        borderRadius: \"25px\",\r\n        height: \"200px\",\r\n        padding: \"50px\",\r\n    },\r\n    header: {\r\n        color: \"black\"\r\n    },\r\n    button: {\r\n        margin: \"0\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%)\",\r\n        backgroundColor: \"#f05ddf\",\r\n        '&:hover': {\r\n            background: \"#f00\",\r\n         },     \r\n    },\r\n    center:{\r\n        textAlign: \"center\",\r\n        top: \"5%\",\r\n        color: \"white\"\r\n    },\r\n    content : {\r\n        paddingTop: \"200px\"\r\n    }\r\n}))\r\n\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    const { abi } = Lottery\r\n    const {chainId} = useEthers()\r\n    const LotteryAddress = chainId ? networkMapping[\"42\"][\"Lottery\"][0] : constants.AddressZero\r\n    const { account } = useEthers()\r\n    const LotteryInterface = new utils.Interface(abi)\r\n    const LotteryContract = new Contract(LotteryAddress, LotteryInterface)\r\n\r\n    //const  [amount , setAmount ] = useState<number | string | Array<number | string >>(0)\r\n    //const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //    const newAmount = event.target.value === \"\" ? \"\" : Number(event.target.value)\r\n    //    setAmount(newAmount)\r\n   // }\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n   const { send , state } = useContractFunction(LotteryContract, \"enter\" , {})\r\n\r\n   console.log(state.status)\r\n\r\n    const amount = 0.0250\r\n   const amountAsWei = utils.parseEther(amount.toString())\r\n    \r\n   const count = useLottery()\r\n\r\n \r\n\r\n    const handleAmountSubmit = () => {\r\n        send({ value: amountAsWei })\r\n    }\r\n    const isConnected = account !== undefined\r\n    console.log(state.status)\r\n    const isMining = state.status === \"Mining\" || state.status === \"PendingSignature\"\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        if(state.status === \"Success\"){\r\n            console.log(\"sucess\")\r\n        }\r\n    }, [state.status] )\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Box className={classes.content}>\r\n            <Box className={classes.box}>\r\n                <h1  className={classes.center} > <strong> Join our Lottery </strong> <br></br>\r\n                    Get a change to Win 5000$ </h1> \r\n            {isConnected ? (\r\n            <Button\r\n                onClick={handleAmountSubmit}\r\n                color = \"primary\"\r\n                variant=\"contained\" \r\n                size=\"large\"\r\n                className={classes.button}\r\n                disabled={isMining}\r\n            >\r\n           <strong> {isMining ? <CircularProgress size={36} thickness={7} color={\"secondary\"} /> : \"Pay 50$ worth ether to enter\" }    </strong>  \r\n            </Button>\r\n             ) : (\r\n                <Button\r\n                onClick={handleAmountSubmit}\r\n                color = \"primary\"\r\n                variant=\"contained\" \r\n                size=\"large\"\r\n                className={classes.button}\r\n                disabled={true}\r\n            >\r\n               Connect Your Wallet First\r\n            </Button>\r\n                )} \r\n            </Box>\r\n        </Box>\r\n        <Snackbar\r\n                open={isMining}\r\n                autoHideDuration={5000}\r\n                >\r\n                <Alert severity=\"success\">\r\n                    Tokens Staked!\r\n                </Alert>\r\n        </Snackbar>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}