{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContractFunction, useEthers } from \"@usedapp/core\";\nimport Lottery from \"../chian-info/contracts/Lottery.json\";\nimport networkMapping from \"../chian-info/deployments/map.json\";\nimport { constants, utils } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nexport const useLottery = () => {\n  _s();\n\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = Lottery;\n  const LotteryAddress = chainId ? networkMapping[String(chainId)][\"Lottery\"][0] : constants.AddressZero;\n  const LotteryInterface = new utils.Interface(abi);\n  const LotteryContract = new Contract(LotteryAddress, LotteryInterface);\n  const {\n    send,\n    state\n  } = useContractFunction(LotteryContract, \"enter\", {\n    transactionName: \"Stake Tokens\"\n  }); //const approveAndStake = ( amount: string ) => {\n  //    return approvedErc20Send(LotteryAddress , amount)\n  //}\n\n  return true;\n};\n\n_s(useLottery, \"5Z1sjVMbMjDrutMCsAu8lYljJVY=\", false, function () {\n  return [useEthers, useContractFunction];\n});","map":{"version":3,"sources":["D:/programing/Blockchain/smartcontract-lottery-main/front_end/src/hooks/useLottery.ts"],"names":["useContractFunction","useEthers","Lottery","networkMapping","constants","utils","Contract","useLottery","chainId","abi","LotteryAddress","String","AddressZero","LotteryInterface","Interface","LotteryContract","send","state","transactionName"],"mappings":";;AAAA,SAASA,mBAAT,EAA8BC,SAA9B,QAA+C,eAA/C;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAqBC,KAArB,QAAkC,QAAlC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAYP,SAAS,EAA3B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAUP,OAAhB;AACA,QAAMQ,cAAc,GAAGF,OAAO,GAAGL,cAAc,CAACQ,MAAM,CAACH,OAAD,CAAP,CAAd,CAAgC,SAAhC,EAA2C,CAA3C,CAAH,GAAmDJ,SAAS,CAACQ,WAA3F;AACA,QAAMC,gBAAgB,GAAG,IAAIR,KAAK,CAACS,SAAV,CAAoBL,GAApB,CAAzB;AACA,QAAMM,eAAe,GAAG,IAAIT,QAAJ,CAAaI,cAAb,EAA6BG,gBAA7B,CAAxB;AAEA,QAAM;AAAEG,IAAAA,IAAF;AAASC,IAAAA;AAAT,MAAoBjB,mBAAmB,CAACe,eAAD,EAAkB,OAAlB,EAA4B;AAACG,IAAAA,eAAe,EAAE;AAAlB,GAA5B,CAA7C,CAP4B,CAS5B;AACA;AACA;;AAGA,SAAO,IAAP;AAIH,CAlBM;;GAAMX,U;UACSN,S,EAMQD,mB","sourcesContent":["import { useContractFunction, useEthers } from \"@usedapp/core\"\r\nimport Lottery from \"../chian-info/contracts/Lottery.json\"\r\nimport networkMapping from \"../chian-info/deployments/map.json\";\r\nimport { constants , utils } from \"ethers\";\r\nimport { Contract } from \"@ethersproject/contracts\" \r\n\r\nexport const useLottery = () => {\r\n    const {chainId} = useEthers()\r\n    const { abi } = Lottery\r\n    const LotteryAddress = chainId ? networkMapping[String(chainId)][\"Lottery\"][0] : constants.AddressZero\r\n    const LotteryInterface = new utils.Interface(abi)\r\n    const LotteryContract = new Contract(LotteryAddress, LotteryInterface)\r\n\r\n    const { send , state  } = useContractFunction(LotteryContract, \"enter\" , {transactionName: \"Stake Tokens\"})\r\n\r\n    //const approveAndStake = ( amount: string ) => {\r\n    //    return approvedErc20Send(LotteryAddress , amount)\r\n    //}\r\n\r\n\r\n    return true\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}