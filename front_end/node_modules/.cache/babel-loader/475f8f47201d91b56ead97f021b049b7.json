{"ast":null,"code":"var _jsxFileName = \"D:\\\\programing\\\\Blockchain\\\\smartcontract-lottery-main\\\\front_end\\\\src\\\\components\\\\Main.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { Button, Input } from \"@material-ui/core\";\nimport Lottery from \"../chian-info/contracts/Lottery.json\";\nimport networkMapping from \"../chian-info/deployments/map.json\";\nimport { constants, utils } from \"ethers\";\nimport { useContractFunction, useEthers } from \"@usedapp/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    abi\n  } = Lottery;\n  const {\n    chainId\n  } = useEthers();\n  const LotteryAddress = chainId ? networkMapping[\"4\"][\"Lottery\"][0] : constants.AddressZero;\n  const {\n    account\n  } = useEthers();\n  const LotteryInterface = new utils.Interface(abi);\n  const LotteryAddressContract = new Contract(LotteryAddress, LotteryInterface);\n\n  const handleAmountSubmit = () => {\n    _s();\n\n    const amountAsWei = utils.parseEther(amount.toString());\n    return approveAndStake(amountAsWei.toString());\n    const {\n      send: stakeSend,\n      state: stakeState\n    } = useContractFunction(tokenFarmContract, \"stakeTokens\", {\n      transactionName: \"Stake Tokens\"\n    });\n  };\n\n  _s(handleAmountSubmit, \"l+xax5X+ZnaZ1IJcKBz0oYcXCl8=\", false, function () {\n    return [useContractFunction];\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\" //onChange={handleInputChange} \n      ,\n      inputProps: {\n        min: 4,\n        max: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\xA0\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Button //onClick={handleStakeSubmit}\n    , {\n      color: \"primary\",\n      variant: \"contained\",\n      size: \"large\" //disabled={isMining}\n      ,\n      children: \"Enter Lottery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Main, \"pjhF5Nl+puCnqpiubNCPXC8tfE0=\", false, function () {\n  return [useEthers, useEthers];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/programing/Blockchain/smartcontract-lottery-main/front_end/src/components/Main.tsx"],"names":["Button","Input","Lottery","networkMapping","constants","utils","useContractFunction","useEthers","Contract","Main","abi","chainId","LotteryAddress","AddressZero","account","LotteryInterface","Interface","LotteryAddressContract","handleAmountSubmit","amountAsWei","parseEther","amount","toString","approveAndStake","send","stakeSend","state","stakeState","tokenFarmContract","transactionName","min","max"],"mappings":";;;AAAA,SAASA,MAAT,EAAkBC,KAAlB,QAAkD,mBAAlD;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAqBC,KAArB,QAAkC,QAAlC;AACA,SAASC,mBAAT,EAA8BC,SAA9B,QAA+C,eAA/C;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAAA;;AAEtB,QAAM;AAAEC,IAAAA;AAAF,MAAUR,OAAhB;AACA,QAAM;AAACS,IAAAA;AAAD,MAAYJ,SAAS,EAA3B;AACA,QAAMK,cAAc,GAAGD,OAAO,GAAGR,cAAc,CAAC,GAAD,CAAd,CAAoB,SAApB,EAA+B,CAA/B,CAAH,GAAuCC,SAAS,CAACS,WAA/E;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA7B;AACA,QAAMQ,gBAAgB,GAAG,IAAIV,KAAK,CAACW,SAAV,CAAoBN,GAApB,CAAzB;AACA,QAAMO,sBAAsB,GAAG,IAAIT,QAAJ,CAAaI,cAAb,EAA6BG,gBAA7B,CAA/B;;AAIA,QAAMG,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,UAAMC,WAAW,GAAGd,KAAK,CAACe,UAAN,CAAiBC,MAAM,CAACC,QAAP,EAAjB,CAApB;AACA,WAAOC,eAAe,CAACJ,WAAW,CAACG,QAAZ,EAAD,CAAtB;AAGA,UAAM;AAAEE,MAAAA,IAAI,EAAEC,SAAR;AAAoBC,MAAAA,KAAK,EAAEC;AAA3B,QAA0CrB,mBAAmB,CAACsB,iBAAD,EAAoB,aAApB,EAAoC;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAApC,CAAnE;AAEH,GAPD;;AAXsB,KAWhBX,kBAXgB;AAAA,YAgB8BZ,mBAhB9B;AAAA;;AAsBtB,sBACI;AAAA,4BACI,QAAC,KAAD;AACA,MAAA,IAAI,EAAC,QADL,CAEA;AAFA;AAGA,MAAA,UAAU,EAAE;AAAEwB,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE;AAAf;AAHZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANL,eAOI,QAAC,MAAD,CACI;AADJ;AAEI,MAAA,KAAK,EAAG,SAFZ;AAGI,MAAA,OAAO,EAAC,WAHZ;AAII,MAAA,IAAI,EAAC,OAJT,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAmBH,CAzCM;;IAAMtB,I;UAGSF,S,EAEEA,S;;;KALXE,I","sourcesContent":["import { Button , Input , CircularProgress } from \"@material-ui/core\"\r\nimport Lottery from \"../chian-info/contracts/Lottery.json\"\r\nimport networkMapping from \"../chian-info/deployments/map.json\";\r\nimport { constants , utils } from \"ethers\";\r\nimport { useContractFunction, useEthers } from \"@usedapp/core\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    const { abi } = Lottery\r\n    const {chainId} = useEthers()\r\n    const LotteryAddress = chainId ? networkMapping[\"4\"][\"Lottery\"][0] : constants.AddressZero\r\n    const { account } = useEthers()\r\n    const LotteryInterface = new utils.Interface(abi)\r\n    const LotteryAddressContract = new Contract(LotteryAddress, LotteryInterface)\r\n\r\n\r\n\r\n    const handleAmountSubmit = () => {\r\n        const amountAsWei = utils.parseEther(amount.toString())\r\n        return approveAndStake(amountAsWei.toString())\r\n\r\n\r\n        const { send: stakeSend , state: stakeState } = useContractFunction(tokenFarmContract, \"stakeTokens\" , {transactionName: \"Stake Tokens\"})\r\n    \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Input\r\n            type=\"number\"\r\n            //onChange={handleInputChange} \r\n            inputProps={{ min: 4, max: 10 }}\r\n             />\r\n             <span>&nbsp;&nbsp;</span>\r\n            <Button\r\n                //onClick={handleStakeSubmit}\r\n                color = \"primary\"\r\n                variant=\"contained\" \r\n                size=\"large\"\r\n                //disabled={isMining}\r\n            >\r\n               Enter Lottery\r\n            </Button>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}